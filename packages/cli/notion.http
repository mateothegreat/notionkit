/*
# `@mateothegreat/notion-sync` API Playbook
> See [httpyac/examples/](https://github.com/httpyac/httpyac.github.io/tree/main/examples) for examples of things you can do with `httpyac`.

## Tricks

### Ask once

```http
@query = {{$input-askonce input app? $value: foo}}
```

This will ask for the `app` input once, and then use the value `foo` for the rest of the requests.

*/


# @description Global scope declarations.
@baseUrl = https://api.notion.com/v1
@notionApiKey = {{token}} // This is read from the .env file.
@pageId = 1ded7342-e571-802e-8d06-fca37dbe8bc4
@propertyId = %3DIr%5C

## Reusable headers for all Notion API requests.
{{+
  // Pre-gaming imports for all requests to use.
  const { equal, fail, match } = require("assert");

  // Reusable headers for all Notion API requests.
  exports.notionHeaders = {
    "Content-Type": "application/json",
    "Authorization": `Bearer {{token}}`,
    "Notion-Version": "2022-06-28"
  };
}}

# Example of a hook that runs before every request.
{{
  console.log("hook that runs before every request");
}}
###

# @name getDatabases
POST {{baseUrl}}/search
...notionHeaders
{
  "query": "",
  "sort": {
    "timestamp": "last_edited_time",
    "direction": "descending"
  },
  "filter": {
    "property": "object",
    "value": "database"
  }
}

# @name getPage
# @title Get a page
###

GET {{baseUrl}}/pages/{{pageId}}
...notionHeaders
>>! ./get-page.json
{{
  const { equal } = require("assert");
  test("status code 200", () => {
    equal(response.statusCode, 200);
  });
  test("object is page", () => {
    equal(response.parsedBody.object, "page");
  });
}}